import { Comparator } from './BinarySearchTree';
/**
 * An interval tree is a data structure that holds intervals. For example, if
 * you had events which took place over a period of time, you might store them
 * in an interval tree where the interval is their duration.
 *
 * It allows you to find all intervals which contain a specific point, or
 * overlap with a given interval.
 */
export declare class IntervalTree<T> {
    protected eq: Comparator<T>;
    private _size;
    private tree?;
    /**
     * Constructs an empty interval tree.
     */
    constructor(eq?: Comparator<T>);
    get size(): number;
    insert(low: number, high: number, value: T): this;
    remove(low: number, high: number, value: T): this;
    lookup(position: number): T[];
    overlap(low: number, high: number): T[];
}
